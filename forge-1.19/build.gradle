plugins {
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.spongepowered.mixin' version "0.7.+"
}

base {
    version = '1.2.1-forge'
    group = 'io.github.hexagonnico.undergroundjungle'
    archivesName = "undergroundjungle-1.19"
}

java {
    toolchain {
        JavaLanguageVersion.of(17)
    }
}

minecraft {
    mappings channel: 'official', version: '1.19.4'

    runs {
        client {
            workingDirectory this.file('../run')
            ideaModule "${rootProject.name}.${project.name}.main"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'underground_jungle'
            mods {
                undergroundjungle {
                    source this.sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources.srcDir 'src/generated/resources'

repositories {
    maven {
        url = 'https://maven.minecraftforge.net/'
    }
    maven {
        url "https://cursemaven.com"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:1.19.4-45.2.0"
    compileOnly project(":common-1.19")
    compileOnly project(":common")
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    // Optional TerraBlender dependency
    implementation fg.deobf('com.github.glitchfiend:TerraBlender-forge:1.19.4-2.3.0.22')
    runtimeOnly fg.deobf('curse.maven:terralith-513688:4823707')
}

mixin {
    add sourceSets.main, "mixin.undergroundjungle.refmap.json"
    config "mixin.undergroundjungle.json"
    config "mixin.undergroundjungle.forge.json"
}

tasks.withType(JavaCompile).configureEach {
    source project(":common").sourceSets.main.allSource
    source project(":common-1.19").sourceSets.main.allSource
}

processResources {
    from project(":common").sourceSets.main.resources
    from project(":common-1.19").sourceSets.main.resources
}

jar {
    manifest {
        attributes([
                "Specification-Title": 'underground_jungle',
                "Specification-Vendor": 'HexagonNico',
                "Specification-Version": project.version,
                "Implementation-Title": project.name,
                "Implementation-Version": project.jar.archiveVersion,
                "Implementation-Vendor": 'HexagonNico',
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')
